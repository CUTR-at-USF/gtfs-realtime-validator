CREATE TABLE IF NOT EXISTS GtfsFeed (
  feedID            INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  feedUrl           VARCHAR(100),
  agency            VARCHAR(100),
  fileLocation      VARCHAR(100),
  downloadTimestamp INTEGER,
  fileChecksum      BLOB,
  errorCount        INTEGER
);

CREATE TABLE IF NOT EXISTS GtfsRtFeed (
  rtFeedID   INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  feedURL    VARCHAR(100),
  startTime  INTEGER,
  gtfsFeedID INTEGER,
  FOREIGN KEY (gtfsFeedID) REFERENCES gtfsfeed (feedID)
);

CREATE TABLE IF NOT EXISTS Error (
  errorID          VARCHAR(20),
  severity         VARCHAR(20),
  title            VARCHAR(500),
  errorDescription CLOB,
  PRIMARY KEY (errorID)
);

-- GTFS-RT feed error occurrences
CREATE TABLE IF NOT EXISTS GtfsRtFeedIteration (
  IterationID        INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  IterationTimestamp INTEGER,
  feedProtobuf       BLOB,
  rtFeedID           INTEGER,
   -- In continuous iterations/requests of feed, determines whether the next feed fetched is unique or not
  isUniqueFeed       BOOLEAN DEFAULT FALSE NOT NULL,
  FOREIGN KEY (rtFeedID) REFERENCES gtfsRtFeed (rtFeedID)
);

CREATE TABLE IF NOT EXISTS MessageLog (
  messageID    INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  iterationID  INTEGER,
  errorID      VARCHAR(20),
  errorDetails VARCHAR(100),
  FOREIGN KEY (iterationID) REFERENCES GtfsRtFeedIteration (iterationID),
  FOREIGN KEY (errorID) REFERENCES Error (errorID)
);

CREATE TABLE IF NOT EXISTS Occurrence (
  occurrenceID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  messageID    INTEGER,
  elementPath  VARCHAR(100),
  elementValue VARCHAR(100),
  FOREIGN KEY (messageID) REFERENCES MessageLog (messageID)
);

-- GTFS feed error occurrences
CREATE TABLE IF NOT EXISTS GtfsFeedIteration (
  IterationID        INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  IterationTimestamp INTEGER,
  feedID             INTEGER,
  FOREIGN KEY (feedID) REFERENCES gtfsfeed (feedID)
);

CREATE TABLE IF NOT EXISTS GtfsMessageLog (
  messageID   INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  iterationID INTEGER,
  errorID     VARCHAR(20),
  FOREIGN KEY (iterationID) REFERENCES GtfsFeedIteration (IterationID),
  FOREIGN KEY (errorID) REFERENCES Error (errorID)
);

CREATE TABLE IF NOT EXISTS GtfsOccurrence (
  occurrenceID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  messageID    INTEGER,
  elementPath  VARCHAR(100),
  elementValue VARCHAR(100),
  FOREIGN KEY (messageID) REFERENCES GtfsMessageLog (messageID)
);

--VIEWS--
CREATE VIEW IF NOT EXISTS errorCount AS
  SELECT
    GtfsRtFeedIteration.IterationID,
    GtfsRtFeedIteration.IterationTimestamp,
    GtfsRtFeed.rtFeedID,
    GtfsRtFeed.feedURL,
    GtfsRtFeed.gtfsFeedID,
    errorCount
  FROM GtfsRtFeedIteration
    JOIN GtfsRtFeed
      ON GtfsRtFeed.rtFeedID = GtfsRtFeedIteration.rtFeedID

    LEFT JOIN
    (SELECT
       iterationID,
       COUNT(*) AS errorCount
     FROM MessageLog
     GROUP BY iterationID) iterationErrors
      ON iterationErrors.iterationID = GtfsRtFeedIteration.IterationID;

CREATE VIEW IF NOT EXISTS gtfsErrorCount AS
  SELECT 
    GtfsMessageLog.messageID,
    GtfsMessageLog.errorID,
    GtfsMessageLog.iterationID,
    GtfsOccurrence.occurrenceID,
    GtfsOccurrence.elementPath,
    GtfsOccurrence.elementValue,
    Error.errorDescription
  FROM GtfsMessageLog
    JOIN GtfsOccurrence ON GtfsMessageLog.messageID = GtfsOccurrence.messageID
    JOIN Error ON Error.errorID = GtfsMessageLog.errorID;

CREATE VIEW IF NOT EXISTS detailedError AS
  SELECT
    GtfsFeed.*,
    GtfsRtFeed.rtFeedID,
    GtfsRtFeed.feedURL AS rtFeedURL,
    GtfsRtFeedIteration.IterationID,
    GtfsRtFeedIteration.IterationTimestamp,
    GtfsRtFeedIteration.feedProtobuf,
    MessageLog.messageID,
    MessageLog.errorID,
    Error.errorDescription,
    Occurrence.elementPath,
    Occurrence.elementValue
  FROM GtfsFeed
    JOIN GtfsRtFeed
      ON GtfsFeed.feedID = GtfsRtFeed.gtfsFeedID
    JOIN GtfsRtFeedIteration
      ON GtfsRtFeed.rtFeedID = GtfsRtFeedIteration.rtFeedID
    LEFT JOIN MessageLog
      ON GtfsRtFeedIteration.IterationID = MessageLog.iterationID
    LEFT JOIN Error
      ON Error.errorID = MessageLog.errorID
    LEFT JOIN Occurrence
      ON MessageLog.messageID = Occurrence.messageID;

CREATE VIEW IF NOT EXISTS messageDetails AS
  SELECT 
    GtfsRtFeedIteration.IterationID,
    GtfsRtFeedIteration.IterationTimestamp,
    GtfsRtFeedIteration.feedProtobuf,
    GtfsRtFeedIteration.rtFeedID,
    MessageLog.messageID,
    MessageLog.errorID,
    MessageLog.errorDetails,
    Occurrence.occurrenceID,
    Occurrence.elementPath,
    Occurrence.elementValue
  FROM GtfsRtFeedIteration
    LEFT JOIN MessageLog
      ON GtfsRtFeedIteration.IterationID = MessageLog.iterationID
    LEFT JOIN Error
      ON Error.errorID = MessageLog.errorID
    LEFT JOIN Occurrence
      ON MessageLog.messageID = Occurrence.messageID;